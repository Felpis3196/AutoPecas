// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimasTurbo.Data;

#nullable disable

namespace SimasTurbo.Migrations
{
    [DbContext(typeof(SimasContext))]
    [Migration("20231029163933_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimasTurbo.Models.CadCompras", b =>
                {
                    b.Property<Guid>("CadComprasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotaCompra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CadComprasId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("tbCadCompras", (string)null);
                });

            modelBuilder.Entity("SimasTurbo.Models.CadVendas", b =>
                {
                    b.Property<Guid>("CadVendasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotaVenda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CadVendasId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("tbCadVendas", (string)null);
                });

            modelBuilder.Entity("SimasTurbo.Models.Categoria", b =>
                {
                    b.Property<Guid>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("tbCategoria", (string)null);
                });

            modelBuilder.Entity("SimasTurbo.Models.Cliente", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("tbCliente", (string)null);
                });

            modelBuilder.Entity("SimasTurbo.Models.Fornecedor", b =>
                {
                    b.Property<Guid>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FornecedorId");

                    b.ToTable("tbFornecedor", (string)null);
                });

            modelBuilder.Entity("SimasTurbo.Models.ItemCompra", b =>
                {
                    b.Property<Guid>("ItemCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CadComprasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PrecoUnit")
                        .HasColumnType("real");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("ItemCompraId");

                    b.HasIndex("CadComprasId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("tbItemCompra", (string)null);
                });

            modelBuilder.Entity("SimasTurbo.Models.ItemVenda", b =>
                {
                    b.Property<Guid>("ItemVendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CadVendasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PrecoUnit")
                        .HasColumnType("real");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("ItemVendaId");

                    b.HasIndex("CadVendasId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("tbItemVenda", (string)null);
                });

            modelBuilder.Entity("SimasTurbo.Models.Produto", b =>
                {
                    b.Property<Guid>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PreçoUnit")
                        .HasColumnType("real");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("tbProduto", (string)null);
                });

            modelBuilder.Entity("SimasTurbo.Models.RelatMov", b =>
                {
                    b.Property<Guid>("RelatMovId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotaFiscal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrecoUnitario")
                        .HasColumnType("real");

                    b.Property<string>("Produto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("TipoMovimentacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RelatMovId");

                    b.ToTable("RelatMov");
                });

            modelBuilder.Entity("SimasTurbo.Models.CadCompras", b =>
                {
                    b.HasOne("SimasTurbo.Models.Produto", null)
                        .WithMany("CadCompras")
                        .HasForeignKey("ProdutoId");
                });

            modelBuilder.Entity("SimasTurbo.Models.CadVendas", b =>
                {
                    b.HasOne("SimasTurbo.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimasTurbo.Models.Produto", null)
                        .WithMany("CadVendas")
                        .HasForeignKey("ProdutoId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SimasTurbo.Models.ItemCompra", b =>
                {
                    b.HasOne("SimasTurbo.Models.CadCompras", "CadCompras")
                        .WithMany("itemCompras")
                        .HasForeignKey("CadComprasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimasTurbo.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadCompras");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SimasTurbo.Models.ItemVenda", b =>
                {
                    b.HasOne("SimasTurbo.Models.CadVendas", "CadVendas")
                        .WithMany("Venda")
                        .HasForeignKey("CadVendasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimasTurbo.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadVendas");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SimasTurbo.Models.Produto", b =>
                {
                    b.HasOne("SimasTurbo.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimasTurbo.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("SimasTurbo.Models.CadCompras", b =>
                {
                    b.Navigation("itemCompras");
                });

            modelBuilder.Entity("SimasTurbo.Models.CadVendas", b =>
                {
                    b.Navigation("Venda");
                });

            modelBuilder.Entity("SimasTurbo.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SimasTurbo.Models.Produto", b =>
                {
                    b.Navigation("CadCompras");

                    b.Navigation("CadVendas");
                });
#pragma warning restore 612, 618
        }
    }
}
